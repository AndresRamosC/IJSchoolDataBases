enum Genders{
MALE,FEMALE
}
enum BlodTypes{
APLUS,AMINUS,BPLUS,BMINUS,ABPLUS,ABMINUS,OPLUS,OMINUS
}


@dto(mapstruct)
@service(serviceClass)
entity Person{
creationDate ZonedDateTime,
firstName String,
lastName String,
gender Genders,
bloodGroup BlodTypes,
dateOfBirth LocalDate,
photograph ImageBlob,
enabled Boolean,
keycloakUserId String
}

@dto(mapstruct)
@service(serviceClass)
entity Contact{
creationDate ZonedDateTime,
eMail String,
state String,
city String,
zipCode Long,
address String,
phoneNumber String
}

@dto(mapstruct)
@service(serviceClass)
entity Company{
creationDate ZonedDateTime,
name String,
bussinessField String,
webPage String,
description String
}

enum EducationLevel{
MIDDLE,HIGH,COLLEGE,MASTERS,PHD
}

@dto(mapstruct)
@service(serviceClass)
entity Guardian{
creationDate ZonedDateTime,
educationLevel EducationLevel,
occupation String,
workAdress String
}

@dto(mapstruct)
@service(serviceClass)
entity Student{
creationDate ZonedDateTime,
admissinDate LocalDate,
academicYear Integer,
controlNumber Long
}

@dto(mapstruct)
@service(serviceClass)
entity Employee{
creationDate ZonedDateTime,
educationLevel EducationLevel,
department String,
controlNumber Long,
employmentType String,
employedSince LocalDate,
employedUntil LocalDate
}

@dto(mapstruct)
@service(serviceClass)
entity Teacher{
creationDate ZonedDateTime,
}

@dto(mapstruct)
@service(serviceClass)
entity Subject{
creationDate ZonedDateTime,
courseName String,
courseCode String,
department String,
colorCode String,
iconCode String
}

@dto(mapstruct)
@service(serviceClass)
entity ClassGroup{
creationDate ZonedDateTime,
groupCode String,
startHour String,
endHour String,
classRoom String,
size Integer,
weekDays Integer
}

@dto(mapstruct)
@service(serviceClass)
entity Attendance{
creationDate ZonedDateTime,
onTime Boolean
}

@dto(mapstruct)
@service(serviceClass)
entity Grade{
creationDate ZonedDateTime,
semester Integer,
grade Float
}

@dto(mapstruct)
@service(serviceClass)
entity Assignment{
creationDate ZonedDateTime,
title String,
description String,
dueDate ZonedDateTime,
done Boolean,
grade Float,
}

@dto(mapstruct)
@service(serviceClass)
entity Attachments{
creationDate ZonedDateTime,
title String,
size Long,
mimeType String
}

@dto(mapstruct)
@service(serviceClass)
entity AttachmentsContent{
creationDate ZonedDateTime,
data Blob
}

@dto(mapstruct)
@service(serviceClass)
entity Exculpatory{
creationDate ZonedDateTime,
leaveDateAndHour ZonedDateTime,
fullDay Boolean,
description String
}

@dto(mapstruct)
@service(serviceClass)
entity GroupNotices{
creationDate ZonedDateTime,
title String,
description String,
}

relationship OneToOne{
 Guardian to Person,
 Student to Person,
 Employee to Person,
 Teacher to Employee,
 Grade to ClassGroup,
 Attachments to AttachmentsContent
}
 
relationship ManyToMany{
 Student to Guardian,
 Company to Contact,
 Person to Contact,
 ClassGroup to Student
}
relationship OneToMany{
 Subject to ClassGroup,
 Teacher to ClassGroup,
 Student to Attendance,
 ClassGroup to Attendance,
 ClassGroup to Assignment,
 Student to Grade,
 Student to Assignment,
 Assignment to Attachments,
 Guardian to Exculpatory,
 Student to Exculpatory,
 ClassGroup to GroupNotices
}


